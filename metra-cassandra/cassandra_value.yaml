affinity: {}
args: []
cluster:
  clientEncryption: false
  datacenter: dc1
  enableUDF: false
  endpointSnitch: SimpleSnitch
  extraSeeds: []
  internodeEncryption: none
  name: cassandra
  numTokens: 256
  rack: rack1
  seedCount: 1
clusterDomain: cluster.local
command: []
commonAnnotations: {}
commonLabels: {}
containerPorts:
  cql: 9042
  intra: 7000
  jmx: 7199
  tls: 7001
containerSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1001
customLivenessProbe: {}
customReadinessProbe: {}
customStartupProbe: {}
dbUser:
  existingSecret: ""
  forcePassword: false
  password: ""
  user: cassandra
diagnosticMode:
  args:
    - infinity
  command:
    - sleep
  enabled: false
existingConfiguration: ""
extraDeploy: []
extraEnvVars: []
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
global:
  imagePullSecrets: []
  imageRegistry: ""
  storageClass: ""
hostAliases: []
hostNetwork: false
image:
  debug: false
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/cassandra
  tag: 4.0.3-debian-10-r0
initContainers: []
initDBConfigMap: ""
initDBSecret: ""
jvm:
  extraOpts: ""
  maxHeapSize: ""
  newHeapSize: ""
kubeVersion: ""
lifecycleHooks: {}
livenessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 60
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  containerPorts:
    http: 8080
    jmx: 5555
  enabled: true
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/cassandra-exporter
    tag: 2.3.7-debian-10-r15
  podAnnotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  resources:
    limits: {}
    requests: {}
  serviceMonitor:
    additionalLabels: {}
    enabled: false
    honorLabels: false
    interval: ""
    jobLabel: ""
    metricRelabelings: []
    namespace: monitoring
    scrapeTimeout: ""
    selector: {}
nameOverride: ""
networkPolicy:
  allowExternal: true
  enabled: false
nodeAffinityPreset:
  key: ""
  type: ""
  values: []
nodeSelector: {}
pdb:
  create: false
  maxUnavailable: ""
  minAvailable: 1
persistence:
  accessModes:
    - ReadWriteOnce
  annotations: {}
  commitStorageClass: ""
  enabled: true
  mountPath: /bitnami/cassandra
  size: 20Gi
  storageClass: longhorn
podAffinityPreset: ""
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
podManagementPolicy: OrderedReady
podSecurityContext:
  enabled: true
  fsGroup: 1001
priorityClassName: ""
readinessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
replicaCount: 3
resources:
  limits: {}
  requests: {}
schedulerName: ""
service:
  annotations: {}
  clusterIP: ""
  externalTrafficPolicy: Cluster
  extraPorts: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  nodePorts:
    cql: ""
    metrics: ""
  ports:
    cql: 9042
    metrics: 8080
  type: ClusterIP
serviceAccount:
  annotations: {}
  automountServiceAccountToken: true
  create: true
  name: ""
sidecars: []
startupProbe:
  enabled: false
  failureThreshold: 60
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
tls:
  autoGenerated: false
  certificatesSecret: ""
  clientEncryption: false
  existingSecret: ""
  internodeEncryption: none
  keystorePassword: ""
  passwordsSecret: ""
  resources:
    limits: {}
    requests: {}
  tlsEncryptionSecretName: ""
  truststorePassword: ""
tolerations: []
topologySpreadConstraints: []
updateStrategy:
  type: RollingUpdate
volumePermissions:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r341
  resources:
    limits: {}
    requests: {}
  securityContext:
    runAsUser: 0
